/****************************************************
** RISC-V_R_instr.sv
** Author: Kai Roy,
** Version: 1.0
** Date: 7/10/2024
** Description: 
** Module for Store instructions - we signal is generated by this module
** This module is used for the Store type instructions. 
** It accepts idata, daddr and we_S from the CPU and uses the value of funct3 as select lines to a multiplexer to choose the specific S_type instruction. 
** Based on this, the 4 bit value of the write enable signal (we_S) is assigned depending on whether a word, half word or a byte is to be written to DMEM. 
** we_S is sent to the CPU.
****************************************************/
// `timescale 1ns / 1ps
`timescale 1ns / 1ns
import riscv_pkg::*;


module S_type(Instr_IO.S_type_io_ports bus_s);
	wire 	[31:0] 	instr;
	logic 	[31:0] 	daddr;
	logic 	[3:0] 	we_S;

	assign instr		= bus_s.idata[14:12];
	assign daddr		= bus_s.daddr;
	assign bus_s.we_S	= we_S;

	s_func func;
	func = s_func'(instr);

	always_comb begin   
        case(func)
			SB: we_S = (4'b0001)<<daddr[1:0];     //SB
			SH: we_S = (4'b0011)<<daddr[1:0];     //SH
			SW: we_S = 4'b1111;                   //SW
        endcase
	end
endmodule